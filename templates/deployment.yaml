apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "piwigo.fullname" . }}
  labels:
    {{- include "piwigo.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "piwigo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "piwigo.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "piwigo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        # bitnami/mariadb creates socket inside
        #       /opt/bitnami/mariadb/tmp/ named mysql.sock
        # Debian expect it in directory
        #       /run/mysqld named mysqld.sock (note mysql.sock != mysqld.sock)
        # this init containers prepares link (to possibly non existent socket)
        # in shared volume 'mariadb-socket'
        - name: create-mysqld
          image: {{ .Values.mariadb.initImage }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              cd /run/mysqld/
              ln -sf mysql.sock mysqld.sock
              ls -la
          volumeMounts:
          - name: mariadb-socket
            mountPath: /run/mysqld/
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          # standard Debian location
          volumeMounts:
          - name: mariadb-socket
            mountPath: /run/mysqld/
        - name: mariadb
          image: {{ .Values.mariadb.image }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MARIADB_ROOT_PASSWORD
              value: {{ .Values.mariadb.password }}
            - name: MARIADB_USER
              value: {{ .Values.mariadb.user }}
            - name: MARIADB_PASSWORD
              value: {{ .Values.mariadb.password }}
            - name: MARIADB_DATABASE
              value: {{ .Values.mariadb.database }}
          # custom bitnami/mariadb socket path `find / -type s``
          volumeMounts:
          - name: mariadb-socket
            mountPath: /opt/bitnami/mariadb/tmp/
            # path where to mount database directory is in docs of image https://hub.docker.com/r/bitnami/mariadb
          - name: mariadb-persist-db
            mountPath: /bitnami/mariadb
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - emptyDir: {}
          name: mariadb-socket
        - name: mariadb-persist-db
          persistentVolumeClaim:
            claimName: piwigo-mariadb-persist-db-claim